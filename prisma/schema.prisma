// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId         Int          @id @default(autoincrement())
  nisitId        String?      @unique
  email          String?
  role           String?
  name           String?
  faculty        String?
  year           Int?
  address        String?
  phone          String?    
  reservePhone1  String?
  reservePhone2  String?
  storeId        Int?
  Store          Store?      @relation(fields: [storeId], references: [storeId])
  invited        Store[]     @relation(name: "InvitationStoreToUser")
}

model Store {
  storeId        Int        @id @default(autoincrement())
  storeRole      String?
  name           String?    @unique
  description    String?
  slogan         String?
  mainProductType String?
  subProductType String?
  innovation     String?
  status         Int?       // 0 for draft, 1 for pending ... 

  ownerId        Int?       @unique
  Member         User[]

  isAssigned     Boolean?   @default(false)
  boothId        Int?       @unique
  Booth          Booth?     @relation(fields: [boothId], references: [id])   
  Sdg            Sdg[]      @relation(name: "StoreToSdg")
  inviting       User[]     @relation(name: "InvitationStoreToUser")
}


model Sdg {
  sdgId           Int       @id @unique
  name            String
  Store           Store[]   @relation(name: "StoreToSdg")
}

model Booth { 
  id             Int           @id @default(autoincrement())  
  name           String?   
  isAssigned     Boolean?      @default(false) 
  Store          Store?    
}